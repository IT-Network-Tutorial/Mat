Výpis programu:
/////////////////////
////// Sériová linka s displejem
//////
////// JAKUB SOCHOR
#define F_CPU 16000000UL
#define BAUD 9600
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<string.h>
#include<avr/io.h>
#include<util/setbaud.h>
#include<util/delay.h>
#include<avr/interrupt.h>
#include<avr/eeprom.h>
char NIVO[255]; //řetězec pro příjem sériových dat
void UART_init(void)
{
UBRR0H=UBRRH_VALUE;
UBRR0L=UBRRL_VALUE;
UCSR0B=0x18;
UCSR0C=0x06;
}
void hw_sentchar(char ct)
{
while ((UCSR0A & 0x20)==0);
UDR0=ct;
}
char UART_rchar(void)
{
while ((UCSR0A & 0x80)==0);
return (UDR0);
}
void UART_send(char strg[255])
{
int i=0;
while (strg[i]!=0)
{
hw_sentchar(strg[i]);
i++;
}
}
void UART_recv(void)
{
int i=0; //index pro příjem znaků do řetězce
char crx; //proměnná char pro příjem znaků
for (i=0;i<255;i++) NIVO[i]=0;
i=0;
UART_send("\r\n > "); //odeslání výzvy do terminálu
do {
crx=UART_rchar(); //příjem znaku
if ((crx>31) && (crx<128)) NIVO[i]=crx; //pokud je znak ˇˇtisknutelnýˇˇ uložte jej v NIVO
hw_sentchar(NIVO[i]); //Odeslat zpět echo na terminál potvrzení příjmu
i++; //přírůstek indexu
} while ((crx!=13) && (crx!=10)); //Příjem až <CR>,<LF> nebo <CR+LF>
NIVO[i]=0; //ukončení řetězce znakem NUL
}
void hw_init(void)
{
DDRB=0xFF;
DDRL=0xFF;
TCCR0B=0x03;
TIMSK0=0x01;
sei();
}
volatile int zobrazeni[8]={10,10,10,10,10,10,10,10};
volatile int pozice=0;
volatile int s=0;
volatile long ms=0;
ISR(TIMER0_OVF_vect)
{
int znaky[12]={0xFC,0x60,0xDA,0xF2,0x66,0xB6,0xBE,0xE0,0xFE,0xF6,0x00,0x02};
PORTB=znaky[zobrazeni[pozice]];
PORTL=pozice;
_delay_us(50);
pozice++;
if (pozice>7) pozice=0;
ms++;
if (ms>1000) {s++; ms=0;}
}
void clear()
{
int i=0;
for (i=0;i<8;i++) zobrazeni[i]=10; //zaplní display spacema
}
/*
void blik()
{
int a = 0;
int i=0;
int l=strlen(NIVO);
while((UCSR0A & 0x80)==0)
{
for (i=0;i<l;i++) zobrazeni[i-1]=NIVO[i]-48;
_delay_ms (500);
clear();
//i++;
_delay_ms (500);
}
}
*/
void left()
{
int i=0;
int l=strlen(NIVO);
for (i=1;i<l;i++) zobrazeni[i-1]=NIVO[i]-48;
}
void right()
{
int i=0;
int l=strlen(NIVO);
for (i=1;i<l;i++) zobrazeni[8-i]=NIVO[l-i]-48;
}
int main (void)
{
hw_init();
UART_init();
while(1)
{
UART_recv();
if (NIVO[0]=='C') clear();
if (NIVO[0]=='R') right();
if (NIVO[0]=='L') left();
/* if (NIVO[0]=='B') blik();/*
}
}